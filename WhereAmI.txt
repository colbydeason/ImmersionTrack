Fix button programming so it doesn't look like sh*t

Stopwatch integration

change db location to appdata, also use new foreign key list / reference for use in total hours

use connection to create log and source at same time

ScottPlott for visual stuff on menu:
    stacked bar for logs
    Coxcomb chart for source types
    Radar chart contrasting number of sources of each type to ammount immersed in each type
If i feel fancy I'll figure out ggplot2 https://stackoverflow.com/questions/34755746/fill-a-heat-map-24h-by-7days-in-ggplot2
            InitializeComponent();
            ScottPlot.Plot p = WeeklyLogs.Plot;
            p.SetAxisLimits(yMin: 0);
            p.Layout(padding: 0);
            p.YAxis.SetBoundary(0, 24);
            p.XAxis.DateTimeFormat(true);
            WeeklyLogs.Refresh();


View
            <StackPanel HorizontalAlignment="Left">
                <TextBlock HorizontalAlignment="Center" Text="Total Time"/>
                <TextBox Text="{Binding SourceDuration, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>

View model
        private int _sourceDuration;
        public int SourceDuration 
        {
            get
            {
                return _sourceDuration;
            }
            set
            {
                _sourceDuration = (int) value;
                OnPropertyChanged(nameof(SourceDuration));
            }
        }

StartupUri="MainWindow.xaml" - > OG startup 

d:DesignHeight="500" d:DesignWidth="1600" - > desired values for immersion time
mc:Ignorable="d" - > design time values, don't show up on application
SizeToContent="WidthAndHeight" - > for mainwindow
Height="450" Width="800" - > OG Window size

Structure ideas:
	Source: Ability to add a source, restriction on source type and name are the same
			Ability to view current and past sources
			Ability to "Complete" a source
	Log: 
			Ability to Add a log w/ or w/out the timer value
			Ability to view logs from certain days or spans of days
